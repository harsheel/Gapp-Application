package gapp.web.controller;


import java.util.ArrayList;
import java.util.List;




import gapp.model.GappAdditional;
import gapp.model.GappApplication;
import gapp.model.GappDepartment;
import gapp.model.GappProgram;
import gapp.model.GappUsers;
import gapp.model.GappUsersType;
import gapp.model.dao.AdditionalDao;
import gapp.model.dao.GappDepartmentDao;
import gapp.model.dao.ProgramDao;
import gapp.model.dao.RegisterDao;
import gapp.model.dao.UsersDao;
import gapp.web.validator.StudentValidator;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

@Controller
public class StudentController {

	@Autowired
    private UsersDao usersDao;
	
	@Autowired
    private GappDepartmentDao deptDao;
	
	@Autowired
    private ProgramDao prgmDao;
	
	@Autowired
    private AdditionalDao additionalDao;
	
	@Autowired
    private RegisterDao registerDao;
	
	@Autowired
    private StudentValidator studentvalidator;
	
	
	
	@RequestMapping(value = "/student/editdept.html", method = RequestMethod.GET)
    public String EditDept(@RequestParam Integer deptid,ModelMap models){
    	
		//models.put( "GappProgram", prgmDao.getProgramId(prgmid) );
		models.put( "GappDepartment", deptDao.getDepartmentId(deptid) );
    	return "student/editdept";
    	
    }
	
	
	@RequestMapping(value = "/student/editdept.html", method = RequestMethod.POST)
    public String EditDept(@ModelAttribute GappDepartment d, BindingResult result){
    	
    	d = deptDao.saveDepartment(d);
    	return "redirect:addeddept.html?id="+d.getDeptid();
    	
    }
	
	
	@RequestMapping(value = "/student/addprgmdept.html", method = RequestMethod.GET)
    public String AddPrgmDept(@RequestParam Integer deptid,ModelMap models){
    	
		models.put( "GappDepartment", deptDao.getDepartmentId(deptid) );
		models.put( "GappProgram", new GappProgram() );
    	return "student/addprgmdept";
    	
    }
    
    @RequestMapping(value = "/student/addprgmdept.html", method = RequestMethod.POST)
    public String AddPrgmDept(@ModelAttribute GappProgram p, BindingResult result,@RequestParam Integer deptid){
    	
    	
    	List<GappDepartment> d = new ArrayList<GappDepartment>();
    	GappDepartment d1 = deptDao.getDepartmentId(deptid);
    	/*System.out.println(d1);
    	System.out.println(p);*/
    	//d.add(d1);
    	p.setDeptid(d1);
    	
    	    	
    	p = prgmDao.saveProgram(p);
    	return "redirect:addedprgm.html?id="+p.getPrgmid();
    	
    }
	
    
    
    @RequestMapping(value = "/student/addadditionaldept.html", method = RequestMethod.GET)
    public String AddAdditionalDept(@RequestParam Integer deptid,ModelMap models){
    	
		models.put( "GappDepartment", deptDao.getDepartmentId(deptid) );
		models.put( "GappAdditional", new GappAdditional() );
    	return "student/addadditionaldept";
    	
    }
    
    @RequestMapping(value = "/student/addadditionaldept.html", method = RequestMethod.POST)
    public String AddAdditionalDept(@ModelAttribute GappAdditional a, BindingResult result,@RequestParam Integer deptid){
    	
    	
    	List<GappDepartment> d = new ArrayList<GappDepartment>();
    	GappDepartment d1 = deptDao.getDepartmentId(deptid);
    	/*System.out.println(d1);
    	System.out.println(p);*/
    	//d.add(d1);
    	a.setDeptid(d1);
    	    	
    	a = deptDao.saveAdditional(a);
    	return "redirect:addedadditional.html?id="+a.getAdditionalid();
    	
    }
    
    
    
    @RequestMapping(value = "/student/removeprgm.html")
    public String RemovePrgm(@RequestParam Integer prgmid )
    {
    	GappApplication ga = new GappApplication();
    	
    	/*System.out.println(ga.getPrgmid().getPrgmid());   	
    	System.out.println(prgmDao.getProgramId(prgmid));
	    if(ga.getPrgmid()==prgmDao.getProgramId(prgmid))
	    		{
	    	System.out.println("Hi");
	    		}*/
	    
		GappProgram p1 = prgmDao.getProgramId(prgmid);
		prgmDao.remove(p1);
		ga.setPrgmid(null);
	    
		//prgmDao.removeProgram(p1);
		return "redirect:pd.html?prgmid="+p1.getPrgmid();
		//return "student/pd";
    }
    
 
	
    @RequestMapping(value = "/student/pd.html")
    public String pd(@RequestParam Integer prgmid, ModelMap models )
    {
    	//GappProgram p1 = prgmDao.getProgramId(prgmid);
    	models.put( "GappProgram", prgmDao.getProgramId(prgmid) );
        return "student/pd";
    }

    
    
    @RequestMapping(value = "/student/removeadditional.html")
    public String RemoveAdditional(@RequestParam Integer additionalid )
    {
		
		GappAdditional a1 = additionalDao.getAdditionalId(additionalid);
		additionalDao.remove(a1);
		
		//prgmDao.removeProgram(p1);
        return "redirect:ad.html?additionalid="+a1.getAdditionalid();
		//return "student/ad";
    }
    
    
    @RequestMapping(value = "/student/ad.html")
    public String ad(@RequestParam Integer additionalid, ModelMap models )
    {
    	//GappProgram p1 = prgmDao.getProgramId(prgmid);
    	models.put( "GappAdditional", additionalDao.getAdditionalId(additionalid) );
        return "student/ad";
    }
	
	
	@RequestMapping(value = "/student/addprgm.html", method = RequestMethod.GET)
    public String AddPrgm(ModelMap models){
    	
		models.put( "GappDepartment", deptDao.getGappDepartment() );
		models.put( "GappProgram", new GappProgram() );
    	return "student/addprgm";
    	
    }
    
    @RequestMapping(value = "/student/addprgm.html", method = RequestMethod.POST)
    public String AddPrgm(@ModelAttribute GappProgram p, BindingResult result,@RequestParam Integer deptid){
    	
    	
    	List<GappDepartment> d = new ArrayList<GappDepartment>();
    	GappDepartment d1 = deptDao.getDepartmentId(deptid);
    	/*System.out.println(d1);
    	System.out.println(p);
    	d.add(d1);*/
    	p.setDeptid(d1);
    	    	
    	p = prgmDao.saveProgram(p);
    	return "redirect:addedprgm.html?id="+p.getPrgmid();
    	
    }
    
    @RequestMapping(value = "/student/addedprgm.html")
    public String AddedPrgm(@RequestParam Integer id, ModelMap models )
    {
		models.put( "GappProgram", prgmDao.getProgramId(id));
        return "student/addedprgm";
    }
    
    @RequestMapping(value = "/student/addadditional.html", method = RequestMethod.GET)
    public String AddAdditional(ModelMap models){
    	
		models.put( "GappDepartment", deptDao.getGappDepartment() );
		models.put( "GappAdditional", new GappAdditional() );
    	return "student/addadditional";
    	
    }
    
    @RequestMapping(value = "/student/addadditional.html", method = RequestMethod.POST)
    public String AddAdditional(@ModelAttribute GappAdditional p, BindingResult result,@RequestParam Integer deptid){
    	
    	
    	List<GappDepartment> d = new ArrayList<GappDepartment>();
    	GappDepartment d1 = deptDao.getDepartmentId(deptid);
    	/*System.out.println(d1);
    	System.out.println(p);
    	d.add(d1);*/
    	p.setDeptid(d1);
    	    	
    	p = deptDao.saveAdditional(p);
    	return "redirect:addedadditional.html?id="+p.getAdditionalid();
    }
    
    @RequestMapping(value = "/student/addedadditional.html")
    public String AddedAdditional(@RequestParam Integer id, ModelMap models )
    {
		models.put( "GappAdditional", deptDao.getAdditionalId(id));
        return "student/addedadditional";
    }
    
    
    
    
	
	
	@RequestMapping(value = "/student/adddept.html", method = RequestMethod.GET)
    public String AddDept(ModelMap models){
    	
		models.put( "GappDepartment", new GappDepartment() );
    	return "student/adddept";
    	
    }
    
    @RequestMapping(value = "/student/adddept.html", method = RequestMethod.POST)
    public String AddDept(@ModelAttribute GappDepartment d, BindingResult result){
    	
    	
    	d = deptDao.saveDepartment(d);
    	return "redirect:addeddept.html?id="+d.getDeptid();
    	
    }
	
	
    @RequestMapping(value = "/student/addeddept.html")
    public String AddedDept(@RequestParam Integer id, ModelMap models )
    {
		models.put( "GappDepartment", deptDao.getDepartmentId(id) );
        return "student/addeddept";
    }
	
	@RequestMapping(value = "/student/student.html")
    public String Student(@RequestParam Integer id, ModelMap models )
    {
		models.put( "GappUsers", usersDao.getUserId(id) );
        return "student/student";
    }
	
	@RequestMapping(value = "/student/staff.html")
    public String Staff(@RequestParam Integer id, ModelMap models )
    {
		models.put( "GappUsers", usersDao.getUserId(id) );
        return "student/staff";
    }
	
	@RequestMapping(value = "/student/admin.html")
    public String Admin(ModelMap models )
    {
		
		//models.put( "GappUsers", usersDao.getUserId(id) );
		models.put( "GappDepartment", deptDao.getGappDepartment() );
		models.put( "GappProgram", prgmDao.getGappProgram() );
		models.put( "GappAdditional", additionalDao.getGappAdditional() );
		/*GappProgram p = (GappProgram) prgmDao.getGappProgram();
		GappDepartment d = (GappDepartment) deptDao.getGappDepartment();
		if(p.getDeptid().getDeptid()==d.getDeptid())
			models.put( "did", d.getDeptid() );	
		*/
        return "student/admin";
    }
	
	
	
	
	//Register
	
	@RequestMapping(value = "/student/registration.html", method = RequestMethod.GET)
    public String Register( ModelMap models )
    {
        models.put( "GappUsers", new GappUsers() );
        return "student/registration";
    }
	
	@RequestMapping(value = "/student/registration.html", method = RequestMethod.POST)
    public String Register(@ModelAttribute GappUsers u, BindingResult result){
    	
		
    	studentvalidator.validate(u, result); 
		if(result.hasErrors()){ return "student/registration";}
		
		
		List<GappUsersType> g = new ArrayList<GappUsersType>();
    	GappUsersType g1 = new GappUsersType();
    	
    	/*if(u.getEmail().equalsIgnoreCase(u.getEmail())){
    		System.out.println("Error");
    	}
    	else{
    	
    	System.out.println("u--"+u.getEmail());*/
    	
    	/*List<GappUsers> users1=usersDao.getemail(u.getEmail());
    	if(users1.size()>0)
    	{
    		System.out.println("Error");
    	}
    	else{*/
    	g1.setTypeid(3);
    	g.add(g1);
    	u.setTypeid(g);
    	
    	u = registerDao.saveUsers(u);
    	
    	//}
    	return "redirect:/";
    }
	
	
	//Login
	
	@RequestMapping(value = "/student/login.html", method = RequestMethod.GET)
    public String Login(ModelMap model){
    	
    	return "student/login";
    	
    }
    
    @RequestMapping(value = "/student/login.html", method = RequestMethod.POST)
    public String Login(@RequestParam String email, @RequestParam String password, ModelMap model){
    	
    	
    	List<GappUsers> gappusers = usersDao.getUserType(email, password);
    	
    	
	    	GappUsers user1 = gappusers.get(0);
    		   	
	    	//System.out.println(user1.getId());
	    	//System.out.println(user1.getTypeid().get(0).getTypeid());
	    	//System.out.println(gappusers.get(0).getTypeid());
	    	
	    	 if (user1.getTypeid().get(0).getTypeid()==(1)){
	    		return "redirect:admin.html?id="+user1.getId();
	    	}
	    	
	    	else if (user1.getTypeid().get(0).getTypeid()==(2)){
	    		return "redirect:staff.html?id="+user1.getId();
	        }
	    	
	    	else if (user1.getTypeid().get(0).getTypeid()==(3)){
	    		return "redirect:student.html?id="+user1.getId();
	    		
	    	}	
	    	else
	    	{
	    	System.out.println("Role not defined for user");	
	    	}
	    	
    	
    	    	
    	return "student/login";
    }
	
	
}
